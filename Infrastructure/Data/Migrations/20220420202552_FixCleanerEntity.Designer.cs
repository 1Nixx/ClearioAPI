// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migrations
{
    [DbContext(typeof(CleaningContext))]
    [Migration("20220420202552_FixCleanerEntity")]
    partial class FixCleanerEntity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("Core.Entities.CleaningComand", b =>
                {
                    b.Property<int>("CleaningComandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("INTEGER");

                    b.HasKey("CleaningComandId");

                    b.ToTable("CleaningComand");
                });

            modelBuilder.Entity("Core.Entities.CleaningObject", b =>
                {
                    b.Property<int>("CleaningObjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactTelephone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectLocation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ObjectName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ObjectSquare")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UsualTeamSize")
                        .HasColumnType("INTEGER");

                    b.HasKey("CleaningObjectId");

                    b.ToTable("CleaningObjects");
                });

            modelBuilder.Entity("Core.Entities.CleanTeamMember", b =>
                {
                    b.Property<int>("CleanTeamMemberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CleanerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CleanerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("CleaningComandId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("EndWorking")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsFinishedWorking")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsStartingWorking")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartWorking")
                        .HasColumnType("TEXT");

                    b.HasKey("CleanTeamMemberId");

                    b.HasIndex("CleaningComandId");

                    b.ToTable("CleanTeamMember");
                });

            modelBuilder.Entity("Core.Entities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CleaningObjectId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComandCleaningComandId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeEnd")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeStart")
                        .HasColumnType("TEXT");

                    b.HasKey("OrderId");

                    b.HasIndex("CleaningObjectId");

                    b.HasIndex("ComandCleaningComandId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Core.Entities.CleanTeamMember", b =>
                {
                    b.HasOne("Core.Entities.CleaningComand", null)
                        .WithMany("TeamMembers")
                        .HasForeignKey("CleaningComandId");
                });

            modelBuilder.Entity("Core.Entities.Order", b =>
                {
                    b.HasOne("Core.Entities.CleaningObject", "CleaningObject")
                        .WithMany()
                        .HasForeignKey("CleaningObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Entities.CleaningComand", "Comand")
                        .WithMany()
                        .HasForeignKey("ComandCleaningComandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CleaningObject");

                    b.Navigation("Comand");
                });

            modelBuilder.Entity("Core.Entities.CleaningComand", b =>
                {
                    b.Navigation("TeamMembers");
                });
#pragma warning restore 612, 618
        }
    }
}
